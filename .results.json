{"stats": {"errors": 0, "failures": 4, "passes": 18, "skipped": 0, "encoding": "UTF-8", "total": 22}, "results": [{"classname": "index_test:TestPlotly", "name": "test_build_trace_accepts_argument_of_name_set_to_default_argument_of_data", "time": 0.0001938343048095703, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_build_trace_mode_is_set_to_markers_by_default", "time": 7.43865966796875e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_build_trace_returns_dict_with_keys_of_x_and_y", "time": 0.0003151893615722656, "type": "failure", "errtype": "builtins.AssertionError", "message": "'mode' != 'x'\n- mode\n+ x\n", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 67, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 625, in run\n    testMethod()\n  File \"/home/fisixgike/plotly-lab-data-science-intro-000/test/index_test.py\", line 7, in test_build_trace_returns_dict_with_keys_of_x_and_y\n    self.assertEqual(list(figurekeys)[0], 'x')\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 836, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 1215, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 690, in fail\n    raise self.failureException(msg)\nAssertionError: 'mode' != 'x'\n- mode\n+ x\n\n"}, {"classname": "index_test:TestPlotly", "name": "test_build_trace_sets_x_values_as_value_and_y_values_as_value", "time": 8.463859558105469e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_build_trace_takes_second_argument_as_mode_set_to_value_of_mode_key", "time": 9.012222290039062e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_layout_adds_an_options_argument", "time": 9.274482727050781e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_layout_adds_x_axis", "time": 5.507469177246094e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_layout_adds_x_axis_and_y_axis", "time": 5.2928924560546875e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_layout_adds_y_axis", "time": 5.0067901611328125e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_layout_returns_dictionary", "time": 4.887580871582031e-05, "type": "success"}, {"classname": "index_test:TestPlotly", "name": "test_trace_values", "time": 0.00041413307189941406, "type": "failure", "errtype": "builtins.AssertionError", "message": "{'x': [1, 2, 3], 'y': [2, 4, 5], 'mode': 'l[34 chars]: []} != {'mode': 'line', 'name': 'line trace', 'x':[22 chars], 5]}\n+ {'mode': 'line', 'name': 'line trace', 'x': [1, 2, 3], 'y': [2, 4, 5]}\n- {'mode': 'line',\n-  'name': 'line trace',\n-  'text': [],\n-  'x': [1, 2, 3],\n-  'y': [2, 4, 5]}", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 67, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 625, in run\n    testMethod()\n  File \"/home/fisixgike/plotly-lab-data-science-intro-000/test/index_test.py\", line 33, in test_trace_values\n    self.assertEqual(test_trace, {'mode': 'line', 'name': 'line trace', 'x': [1, 2, 3], 'y': [2, 4, 5]})\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 836, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 1128, in assertDictEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 690, in fail\n    raise self.failureException(msg)\nAssertionError: {'x': [1, 2, 3], 'y': [2, 4, 5], 'mode': 'l[34 chars]: []} != {'mode': 'line', 'name': 'line trace', 'x':[22 chars], 5]}\n+ {'mode': 'line', 'name': 'line trace', 'x': [1, 2, 3], 'y': [2, 4, 5]}\n- {'mode': 'line',\n-  'name': 'line trace',\n-  'text': [],\n-  'x': [1, 2, 3],\n-  'y': [2, 4, 5]}\n"}, {"classname": "test_test:TestPlotly", "name": "test_build_trace_accepts_argument_of_name_set_to_default_argument_of_data", "time": 9.083747863769531e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_build_trace_mode_is_set_to_markers_by_default", "time": 6.556510925292969e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_build_trace_returns_dict_with_keys_of_x_and_y", "time": 0.0002353191375732422, "type": "failure", "errtype": "builtins.AssertionError", "message": "'mode' != 'x'\n- mode\n+ x\n", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 67, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 625, in run\n    testMethod()\n  File \"/home/fisixgike/plotly-lab-data-science-intro-000/test_test.py\", line 7, in test_build_trace_returns_dict_with_keys_of_x_and_y\n    self.assertEqual(list(figurekeys)[0], 'x')\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 836, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 1215, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 690, in fail\n    raise self.failureException(msg)\nAssertionError: 'mode' != 'x'\n- mode\n+ x\n\n"}, {"classname": "test_test:TestPlotly", "name": "test_build_trace_sets_x_values_as_value_and_y_values_as_value", "time": 7.963180541992188e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_build_trace_takes_second_argument_as_mode_set_to_value_of_mode_key", "time": 6.031990051269531e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_layout_adds_an_options_argument", "time": 5.316734313964844e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_layout_adds_x_axis", "time": 6.556510925292969e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_layout_adds_x_axis_and_y_axis", "time": 0.0001087188720703125, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_layout_adds_y_axis", "time": 5.555152893066406e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_layout_returns_dictionary", "time": 4.935264587402344e-05, "type": "success"}, {"classname": "test_test:TestPlotly", "name": "test_trace_values", "time": 0.0003368854522705078, "type": "failure", "errtype": "builtins.AssertionError", "message": "{'x': [1, 2, 3], 'y': [2, 4, 5], 'mode': 'l[34 chars]: []} != {'mode': 'line', 'name': 'line trace', 'x':[22 chars], 5]}\n+ {'mode': 'line', 'name': 'line trace', 'x': [1, 2, 3], 'y': [2, 4, 5]}\n- {'mode': 'line',\n-  'name': 'line trace',\n-  'text': [],\n-  'x': [1, 2, 3],\n-  'y': [2, 4, 5]}", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 67, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 625, in run\n    testMethod()\n  File \"/home/fisixgike/plotly-lab-data-science-intro-000/test_test.py\", line 33, in test_trace_values\n    self.assertEqual(test_trace, {'mode': 'line', 'name': 'line trace', 'x': [1, 2, 3], 'y': [2, 4, 5]})\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 836, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 1128, in assertDictEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 690, in fail\n    raise self.failureException(msg)\nAssertionError: {'x': [1, 2, 3], 'y': [2, 4, 5], 'mode': 'l[34 chars]: []} != {'mode': 'line', 'name': 'line trace', 'x':[22 chars], 5]}\n+ {'mode': 'line', 'name': 'line trace', 'x': [1, 2, 3], 'y': [2, 4, 5]}\n- {'mode': 'line',\n-  'name': 'line trace',\n-  'text': [],\n-  'x': [1, 2, 3],\n-  'y': [2, 4, 5]}\n"}]}